

    - name: Disable nm-cloud-setup service
      ansible.builtin.systemd:
        name: nm-cloud-setup
        state: stopped
        enabled: false
      when: ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "9"
      register: disable_service
      notify:
        - Log status

    - name: Disable nm-cloud-setup.timer service
      ansible.builtin.systemd:
        name: nm-cloud-setup.timer
        state: stopped
        enabled: false
      when: ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "9"
      register: disable_timer
      notify:
        - Log status

    - name: Reboot the system
      ansible.builtin.reboot:
        reboot_timeout: 420
      when: ansible_facts['distribution'] == "RedHat" and ansible_facts['distribution_major_version'] == "9"
      async: 1
      poll: 0  # Ensures the playbook continues running in the background
      register: reboot_task
      notify:
        - Log status


    - name: Ensure the system is reachable
      ansible.builtin.wait_for_connection:
        connect_timeout: 10
        delay: 5
        timeout: 420
      register: wait_status
      notify:
        - Log status



    - name: Install k3s & Start it No Docker
      ansible.builtin.shell: curl -sfL https://get.k3s.io | sh -s - --write-kubeconfig-mode 644
      args:
        executable: /bin/bash
      register: k3s_install
      notify:
        - Log status

    - name: Set Permissions On Rancher Files
      ansible.builtin.file:
        path: /etc/rancher/k3s/k3s.yaml
        mode: '0644'

    - name: Ensure .kube directory exists
      ansible.builtin.file:
        path: "/root/.kube/"
        state: directory
        mode: '0755'

    - name: Set Permissions On kubectl executable
      ansible.builtin.file:
        path: "/usr/local/bin/kubectl"
        mode: '0755'

    - name: Create Kubectl Symbolic Link
      ansible.builtin.file: 
        src: "/usr/local/bin/kubectl"
        dest: '/usr/bin/kubectl'
        state: link


    - name: Notify about installation failure
      ansible.builtin.debug: 
        msg: "There was an issue with trying to install k3s...trying again"

    - name: Ensure /awx_install_files exists
      ansible.builtin.file:
        path: "/awx_install_files"
        state: directory
        mode: '0755'

    - name: Copy over custom k3s.service File
      ansible.builtin.copy:
        src: "{{ role_path }}/files/updated-k3s.service"
        dest: "/awx_install_files"

    - name: Update /etc/systemd/system/k3s.service File
      ansible.builtin.shell: "cat updated-k3s.service > /etc/systemd/system/k3s.service"
      args:
        executable: /bin/bash
        chdir: "/awx_install_files"

    - name: Restart k3s service
      ansible.builtin.systemd: 
        name: k3s
        state: restarted
        enabled: true
        daemon_reload: true

    - name: Ensure .kube directory exists
      ansible.builtin.file:
        path: "/root/.kube/"
        state: directory
        mode: '0755'

    - name: Delete the /awx_install_files Directory
      ansible.builtin.file:
        path: "/awx_install_files/"
        state: absent

# --- HANDLERS ---
    - name: Write status to log file
      ansible.builtin.lineinfile:
        path: /var/log/ansible-playbook.log
        line: "{{ ansible_date_time.iso8601 }} - Task {{ ansible_task_name }} completed with status {{ ansible_failed_result | default('SUCCESS') }}"
        create: yes
        mode: '0644'
